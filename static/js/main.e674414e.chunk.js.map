{"version":3,"sources":["api/api.ts","components/PostsList/PostsList.tsx","api/post.ts","api/comments.ts","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","App.tsx","index.tsx"],"names":["BASE_URL","request","url","a","options","fetch","data","json","PostsList","props","selectedUserId","selectedPostId","onSelectPost","useState","posts","setPosts","useEffect","postsFromApi","className","length","map","post","userId","title","type","onClick","postId","id","loadPostComments","addCommentToServer","newComment","method","headers","body","JSON","stringify","deleteCommentFromServer","commentId","NewCommentForm","onAddComments","userName","setUserName","userEmail","setUserEmail","userComment","setUserComment","onSubmit","event","preventDefault","name","email","placeholder","value","onChange","e","target","PostDetails","comments","setComments","selectedPost","setSelectedPost","isHiddenComments","setIsHiddenComments","commentsFromApi","addComments","deleteComment","comment","App","users","setUsers","currentUserId","setCurrentUserId","setSelectedPostId","usersFromApi","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e674414e.chunk.js","sourcesContent":["const BASE_URL = 'https://mate.academy/students-api';\n\nexport const request = async (url: string, options = {}) => {\n  const data = await fetch(`${BASE_URL}${url}`, options);\n\n  return data.json();\n};\n","import React, { useState, useEffect } from 'react';\nimport { loadAllPosts, loadUserPosts } from '../../api/post';\nimport './PostsList.scss';\n\ntype Props = {\n  selectedUserId: number;\n  selectedPostId: number;\n  onSelectPost: (postId :number) => void;\n};\n\nexport const PostsList: React.FC<Props> = (props) => {\n  const { selectedUserId, selectedPostId, onSelectPost } = props;\n  const [posts, setPosts] = useState<Post[]>([]);\n\n  useEffect(() => {\n    if (selectedUserId === 0) {\n      (async () => {\n        const postsFromApi = await loadAllPosts();\n\n        setPosts(postsFromApi);\n      })();\n\n      return;\n    }\n\n    (async () => {\n      const postsFromApi = await loadUserPosts(selectedUserId);\n\n      setPosts(postsFromApi);\n    })();\n  }, [selectedUserId]);\n\n  const handleClick = (postId: number) => (\n    postId === selectedPostId\n      ? onSelectPost(0)\n      : onSelectPost(postId)\n  );\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.length > 0 ? (\n          <>\n            {posts.map(post => (\n              <li key={post.id} className=\"PostsList__item\">\n                <div>\n                  <b>{`[User #${post.userId}]: `}</b>\n                  {post.title}\n                </div>\n\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={() => handleClick(post.id)}\n                >\n                  {selectedPostId === post.id\n                    ? 'Close'\n                    : 'Open'}\n                </button>\n              </li>\n            ))}\n          </>\n        ) : 'No posts'}\n      </ul>\n    </div>\n  );\n};\n","import { request } from './api';\n\nexport const loadAllPosts = (): Promise<Post[]> => {\n  return request('/posts');\n};\n\nexport const loadUserPosts = (userId: number): Promise<Post[]> => {\n  return request(`/posts?userId=${userId}`);\n};\n\nexport const loadPostDetails = (postId: number): Promise<Post> => {\n  return request(`/posts/${postId}`);\n};\n\nexport const loadUsers = (): Promise<User[]> => {\n  return request('/users');\n};\n","import { request } from './api';\n\nexport const loadPostComments = (postId: number) => {\n  return request(`/comments?postId=${postId}`);\n};\n\nexport const addCommentToServer = (newComment: Partial<Comment>) => {\n  return request('/comments', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(newComment),\n  });\n};\n\nexport const deleteCommentFromServer = (commentId: number) => {\n  return request(`/comments/${commentId}`, {\n    method: 'DELETE',\n  });\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\n\ntype Props = {\n  postId: number,\n  onAddComments: (newComment: Partial<Comment>) => void,\n};\n\nexport const NewCommentForm: React.FC<Props> = (props) => {\n  const { postId, onAddComments } = props;\n  const [userName, setUserName] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  const [userComment, setUserComment] = useState('');\n\n  const resetFormFields = () => {\n    setUserName('');\n    setUserEmail('');\n    setUserComment('');\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const newComment = {\n      name: userName,\n      email: userEmail,\n      body: userComment,\n      postId,\n    };\n\n    onAddComments(newComment);\n    resetFormFields();\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={userName}\n          onChange={(e) => setUserName(e.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={userEmail}\n          onChange={(e) => setUserEmail(e.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={userComment}\n          onChange={(e) => setUserComment(e.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { loadPostComments, addCommentToServer, deleteCommentFromServer } from '../../api/comments';\nimport { loadPostDetails } from '../../api/post';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\ntype Props = {\n  selectedPostId: number,\n};\n\nexport const PostDetails: React.FC<Props> = (props) => {\n  const { selectedPostId } = props;\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [selectedPost, setSelectedPost] = useState<Post | null>(null);\n  const [isHiddenComments, setIsHiddenComments] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      const commentsFromApi = await loadPostComments(selectedPostId);\n\n      setComments(commentsFromApi);\n    })();\n\n    (async () => {\n      const postsFromApi = await loadPostDetails(selectedPostId);\n\n      setSelectedPost(postsFromApi);\n    })();\n  }, [selectedPostId]);\n\n  const handleHiddenComments = () => {\n    setIsHiddenComments(!isHiddenComments);\n  };\n\n  const addComments = async (newComment: Partial<Comment>) => {\n    await addCommentToServer(newComment);\n    const commentsFromApi = await loadPostComments(selectedPostId);\n\n    setComments(commentsFromApi);\n  };\n\n  const deleteComment = async (commentId: number) => {\n    await deleteCommentFromServer(commentId);\n    const commentsFromApi = await loadPostComments(selectedPostId);\n\n    setComments(commentsFromApi);\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{selectedPost?.body}</p>\n      </section>\n\n      {comments.length > 0 && (\n        <section className=\"PostDetails__comments\">\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={handleHiddenComments}\n          >\n            {`${!isHiddenComments ? 'Hide' : 'Show'} `\n             + `${comments.length} comments`}\n          </button>\n\n          <ul className=\"PostDetails__list\">\n            {!isHiddenComments && (\n              comments.map(comment => (\n                <li\n                  key={comment.id}\n                  className=\"PostDetails__list-item\"\n                >\n                  <button\n                    type=\"button\"\n                    className=\"PostDetails__remove-button button\"\n                    onClick={() => deleteComment(comment.id)}\n                  >\n                    X\n                  </button>\n                  <p>{comment.body}</p>\n                </li>\n              ))\n            )}\n          </ul>\n        </section>\n      )}\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            postId={selectedPostId}\n            onAddComments={addComments}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { loadUsers } from './api/post';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App: React.FC = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [currentUserId, setCurrentUserId] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  useEffect(() => {\n    (async () => {\n      const usersFromApi = await loadUsers();\n\n      setUsers(usersFromApi);\n    })();\n  }, []);\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setCurrentUserId(+event.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={handleSelect}\n          >\n            <option value={0}>All users</option>\n            {users.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            selectedUserId={currentUserId}\n            selectedPostId={selectedPostId}\n            onSelectPost={setSelectedPostId}\n          />\n        </div>\n\n        {selectedPostId > 0 && (\n          <div className=\"App__content\">\n            <PostDetails selectedPostId={selectedPostId} />\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}